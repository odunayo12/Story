git cheat codes

Local repository, that is, repository on my system
To initialize use
git init

Display all using
ls -a

check if file is commited to git with
git status
Note
if file in our directory is not yet committed are shown in red.

To add these files to git, do

git add filename.extension
or
git add .
if file is more than 1 and one needs to comit all
else do
git add filename.extension filename1.extension filename2.extension

to undo, do
git rm --cached -r .

use git status to check
if added it turns out green.

            Now, to commit it to versioning do

git commit -m "Commit message in present tense"


AFTER EDITING THE PROJECT
use
git status
to check for uncommited changes.

To check for the discripancies do

git diff filename.extension

To roll back previous versions, do

git checkout filename.extension

or to proceed to save changes do
git commit -m "message here"

and

git push origin master -u
to serve it to the remote.



          ADD EDITING TO FILE SOURCE

If new files are added to directory, use the add command
do
git commit -m "Commit message in present tense."

use
git log
to view log

      USING REMOTE REPOSITORIES (Git Hub)
Create a repository in GitHub, do all formalities and....

It then displays code, click https and follow either the create (to create new repo) or push instruction (to add an existing local repo to remote repo)
but enter "set-url" before "origin"

If already in remote, after committing the latest edit, simply use
git push

      TO IGNORE FILES

create a .gitignore file using
touch .gitignore

write the names of the files to be ignored with their extensions therein and each on a new line and save

check github/gitignore for useful ready made templates depending on package.

        CLONING
USE
git clone url (from Git)

FOR EXPERIMENTAL PURPOSES OR NEW FEATURE ADDITION; ONE COULD CREATE A COPY OF THE PROJECT; TEST OUT FEATURES AND LATER MERGE THE FEATURES
To create a branch
git branch branchName

confirm using
git branch

to switch branches do
git checkout branchName

To merge branches, switch to master branch by
git checkout master

then
git merger branchName


To create a push in the branch
git push --set-upstream origin experiment
